{
  "hash": "f1aa546da9264edf8ba175ae024fef9e",
  "result": {
    "engine": "knitr",
    "markdown": "# Data {#sec-data}\n\n\n\nYes - this really is that important to deserve its own chapter.\n\n## Getting Data\n\nwhat are some relevant data-sets. \\[ \\] work in progress\n\nStep 0: Save yourself a headache and collect your data in a processable format [https://open.substack.com/pub/statsepi/p/simple-tips-for-recording-data-in](https://open.substack.com/pub/statsepi/p/simple-tips-for-recording-data-in?utm_campaign=post&utm_medium=web)Â \n\n**Step 1: Data Wrangling**\n\n-   Each row is an observation (usually a patient)\n-   Each column contains only 1 type of data (more below)\n-   No free text (if you need to, categorize responses)\n\n## Formatting\n\nClean tabular format etc.\n\nUse excel like a boss, if you're going to: More excel data https://cghlewis.com/blog/excel_entry/\n\nFlat files: Flat files: https://evidence.dev/blog/what-is-a-flat-file?utm_campaign=Data_Elixir&utm_source=Data_Elixir_526\n\n## Data types\n\n**Step 2: For each data element, consider the data type**\n\n-   Binary (aka dichotomous scale): e.g. Yes or No, 0 or 1\n-   Unordered Categorical (nominal scale): e.g. Utah, Colorado, Nevada, Idaho\n-   Ordered Categorical (ordinal scale): e.g. Room air, nasal cannula, HFNC, intubated, ECMO, dead\n-   Continuous (interval & ratio scales - differ by whether 0 is special): e.g. Temperature (Celsius or Kelvin, respectively)\n\n|           |                 |             |                     |              |\n|-----------|-----------------|-------------|---------------------|--------------|\n|           | **dichotomous** | **nominal** | **ordinal**         | **interval** |\n| a.ka.     | binary          | categorical | ordered categorical | continuous   |\n| n         | X               | X           | X                   | X            |\n| \\%        | X               | X           | X                   | X            |\n| min       |                 |             | X                   | X            |\n| max       |                 |             | X                   | X            |\n| range     |                 |             | X                   | X            |\n| mode      | X               | X           | X                   | X            |\n| mean      |                 |             |                     | X            |\n| median    |                 |             | X                   | X            |\n| IQR       |                 |             | X                   | X            |\n| Std. dev. |                 |             |                     | X            |\n| Std. err. |                 |             |                     | X            |\n\nFrom: Stoddard GJ. Biostatistics and Epidemiology Using Stata: A Course Manual. Salt Lake City, UT: University of Utah School of Medicine.\n\nTODO: not sure this stuff should live here vs elsewhere:\n\n**Step 3: Visualize the distribution of each data-point** (detect outliers, data entry errors, etc.)\n\nDarren's hypothetical code lives in a spreadsheet \"darren_proj.xlsx\":\n\nHere is some code that loads the excel spreadsheet into R (we'll revisit)\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n:::\n\n\nIt's already (mostly) clean.\n\nLet's summarize it:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsummary(darren_data_sheet)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   patient_id    splenectomy        prox_v_dist           qanadli     \n Min.   : 1.00   Length:20          Length:20          Min.   : 2.00  \n 1st Qu.: 5.75   Class :character   Class :character   1st Qu.: 3.75  \n Median :10.50   Mode  :character   Mode  :character   Median :10.00  \n Mean   :10.50                                         Mean   :10.30  \n 3rd Qu.:15.25                                         3rd Qu.:15.00  \n Max.   :20.00                                         Max.   :25.00  \n   got_cteph?       hosp          \n Min.   :0.00   Length:20         \n 1st Qu.:0.00   Class :character  \n Median :0.00   Mode  :character  \n Mean   :0.25                     \n 3rd Qu.:0.25                     \n Max.   :1.00                     \n```\n\n\n:::\n:::\n\n\nHmmm.. what's wrong with this?\n\nR need to be told that the binary variables are binary (and not characters)\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(dplyr)\n\n# Convert 'y'/'n' in the splenectomy column to TRUE/FALSE\ndarren_data_sheet <- darren_data_sheet %>%\n  mutate(splenectomy = ifelse(splenectomy == \"y\", TRUE, FALSE))\n\n# Assuming darren_data_sheet is your dataframe\ndarren_data_sheet <- darren_data_sheet %>%\n  mutate(`got_cteph?` = ifelse(`got_cteph?` == 1, TRUE, FALSE))\n```\n:::\n\n\nLet's visualize each element:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\n# First, the binary ones\n\n# Plot for splenectomy\nggplot(darren_data_sheet, aes(x = factor(splenectomy))) +\n  geom_bar() +\n  labs(title = \"Distribution of Splenectomy\", x = \"Splenectomy\", y = \"Count\")\n```\n\n::: {.cell-output-display}\n![](data_files/figure-html/unnamed-chunk-5-1.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\n# Plot for prox_v_dist\nggplot(darren_data_sheet, aes(x = factor(prox_v_dist))) +\n  geom_bar() +\n  labs(title = \"Distribution of Proximal vs. Distal\", x = \"Proximal vs Distal\", y = \"Count\")\n```\n\n::: {.cell-output-display}\n![](data_files/figure-html/unnamed-chunk-5-2.png){fig-align='center' width=100%}\n:::\n\n```{.r .cell-code}\n# Plot for got_cteph?\nggplot(darren_data_sheet, aes(x = factor(`got_cteph?`))) +\n  geom_bar() +\n  labs(title = \"Distribution of CTEPH Diagnosis\", x = \"Got CTEPH?\", y = \"Count\")\n```\n\n::: {.cell-output-display}\n![](data_files/figure-html/unnamed-chunk-5-3.png){fig-align='center' width=100%}\n:::\n:::\n\n\nThe categorical one:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Bar chart for hosp\nggplot(darren_data_sheet, aes(x = factor(hosp))) +\n  geom_bar(fill = \"coral\", color = \"black\") +\n  labs(title = \"Distribution of Hospital\", x = \"Hospital\", y = \"Count\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Adjust text angle for better readability if needed\n```\n\n::: {.cell-output-display}\n![](data_files/figure-html/unnamed-chunk-6-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\nand finally, the continuous one:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Histogram for qanadli\nggplot(darren_data_sheet, aes(x = qanadli)) +\n  geom_histogram(bins = 30, fill = \"blue\", color = \"black\") +\n  labs(title = \"Histogram of Qanadli Scores\", x = \"Qanadli Score\", y = \"Frequency\")\n```\n\n::: {.cell-output-display}\n![](data_files/figure-html/unnamed-chunk-7-1.png){fig-align='center' width=100%}\n:::\n:::\n\n",
    "supporting": [
      "data_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}